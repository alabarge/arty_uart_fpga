#
# NOTE: INSTALL BOARD FILES FROM DIGILENT INTO VIVADO DIRECTORY
#

# cd to arty_uart_fpga\arty_top\pr_ddr\script
# double-click create_proj.bat file, this will delete existing vivado directory

# fpga_build.vhd is not updated automatically, it must be updated manually
# make sure vivado is in the arty_uart_fpga\arty_top\pr_ddr\vivado\system directory
# update fpga_build.vhd, requires IP upgrade, time stamp the design
   source ../../../pr_ddr/script/pre_build.tcl
# select "Refresh IP Catalog"
# select "Upgrade Selected"
# skip "Generate Output Products"
# rerun IP Status

# from vivado, click Generate Bitstream, takes a while

# create fpga_version.h
   source ../../../pr_ddr/script/post_build.tcl

#
# FOR PRODUCTION RELEASE OF FPGA BIT FILE EXECUTE THE FOLLOWING SCRIPT
#
   source ../../../pr_ddr/script/zip_release.tcl


# once complete, select File->Export->Export Hardware (include bitstream)

# select Tools->Launch Vitis IDE (not until previous step is complete)

# select arty_uart_fpga\mb directory, close welcome screen

# select Window->Preferences... Import preferences (bottom left icon), example d:\arty_uart_fpga\utils\eclipse.epf
# restart eclipse

# select File->Import Eclipse workspace or zip file

# unselect "Copy projects" into workspace and Browse to arty_uart_fpga\mb directory

# not all projects need to be selected, just the ones for change
# for example if you select arty_fw you also need to select arty_fw_system and arty_top

# select "Release" for all projects from the Assistant, only release builds can be flashed

# select right-click arty_top and Update Hardware Specification
# should be something like: D:/arty_uart_fpga/arty_top/pr_ddr/vivado/system/arty_top.xsa

# select right-click arty_top "Build Project" (creates libxil.a library)

# select right_click arty_fw "Build Project" (creates arty_fw.elf and arty_fw.srec files)

# launch VS 2022 by double-clicking win/jack/jack.sln
# select Build->Rebuild Solution
# F5 for debugging

#
# FLASH ORDER MATTERS HERE, IF THE ELF FILE CHANGES THE BIT FILE MUST ALSO BE FLASHED
#
# ONLY FLASH RELEASED BUILDS!
#

#
# FLASH FROM XILINX->VITIS SHELL
#
# cd to utils directory
# flash.bat
#

#
# FLASH FROM VITIS (VIA GUI)
#
# program flash, Xilinx->Program Flash, Browse for arty_fw.elf
# set offset = 0x600000 (this offset is also defined in srec_boot in blconfig.h)
# flash type = s25fl128sxxxxxx0-spi-x1_x2_x4
# select Convert ELF, Blank check and Verify
# then Program

# program flash, Xilinx->Program Flash, Browse for mb\arty_top\hw\arty_top.bit
# set offset = 0x0 (always zero for fpga bitfile, btw - this bitfile has the bootloader)
# flash type = s25fl128sxxxxxx0-spi-x1_x2_x4
# select Blank check and Verify
# then Program



# use write_project_tcl -force make_proj.tcl to capture changes to block design
# use beyond compare to move changes into the IP PR directory
# incidental changes based on build, layout and GUI do not need to be updated

# in order to use vitis debugger the mb_bootloop.elf file must be selected for association
# in vivado and the bitstream rebuilt

#
# the hardware manager can also be used to flash the device
# use Tools->Generate Memory Configuration File ...
# add bitstream and application ELF file (not binary if using the elf bootloader)
#

#
# NOTE: IF ANYTHING MOVES IN THE ADDRESS MAP THAT AFFECTS SREC BOOT THEN THE
#       SREC BOOT PROJECT MUST BE REBUILT AND VIVADO RE-RUN TO CAPTURE THE
#       CHANGED SREC_BOOT.ELF FILE!
#

#
# NOTE: WHEN CONNECTING TO THE COMMAND LINE INTERFACE USING THE BUILT IN SERIAL
#       PORT, THE FPGA WILL RESET WHEN CONNECTED FOR THE FIRST TIME (SOMETIMES)
#

#
# NOTE: WHEN LAUNCHING FIRMWARE FROM VITIS (DEBUG OR RELEASE), THE RESET VECTOR
#       IN THE LSCRIPT.LD FILE MUST BE CHANGED, SEE NOTE IN FILE. USE RIGHT-CLICK
#       PROJECT "RUN AS" OR "DEBUG AS" LAUNCH HARDWARE (SINGLE APPLICATION DEBUG)


